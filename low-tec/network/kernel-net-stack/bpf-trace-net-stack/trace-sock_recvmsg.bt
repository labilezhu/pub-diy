#!/usr/local/bin/bpftrace
BEGIN
{
    printf("\n");
}

// //kprobe:ip_rcv
// {
//     // printf("***** elapsed=%d: tid=%d,comm=%s: sys_enter_epoll_ctl, epfd=%d, op=%s, fd=%d, events=0x%x\n", 
//     //     elapsed, tid, comm, args->epfd, @epoll_ctl_op[$op], $fd, $epollEvents);

//     @kstack[pid,tid,comm,kstack] = count();
// }


/*
format:
        field:unsigned short common_type;       offset:0;       size:2; signed:0;
        field:unsigned char common_flags;       offset:2;       size:1; signed:0;
        field:unsigned char common_preempt_count;       offset:3;       size:1; signed:0;
        field:int common_pid;   offset:4;       size:4; signed:1;

        field:unsigned int vec; offset:8;       size:4; signed:0;

print fmt: "vec=%u [action=%s]", REC->vec, __print_symbolic(REC->vec, 
    { 0, "HI" }, { 1, "TIMER" }, { 2, "NET_TX" }, { 3, "NET_RX" }, { 4, "BLOCK" }, { 5, "IRQ_POLL" }, 
    { 6, "TASKLET" }, { 7, "SCHED" }, { 8, "HRTIMER" }, { 9, "RCU" })
*/
tracepoint:irq:softirq_entry
{
    @kstack[pid,tid,comm,kstack] = count();

	$common_pid = args->common_pid;
    $vec = args->vec;
    @softcount[$vec] = count();
}
