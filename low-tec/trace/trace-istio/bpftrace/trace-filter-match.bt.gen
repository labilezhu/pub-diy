#!/usr/local/bin/bpftrace


/**
function getEnvoyPID()
{
    export PODID=`crictl pods | grep forti | head -n1 | awk '{print $1;}'`
    export CONTAINERID=`crictl ps | grep $PODID | grep proxy | awk '{print $1;}'`
    export CPID=`crictl inspect $CONTAINERID 2> /dev/null | jq -r -j .info.pid`
    export PID=`pgrep --ns $CPID envoy`
    echo $PID
}

export PID=`echo "$(declare -f getEnvoyPID); getEnvoyPID" | sudo bash`

export SCRIPT_HOME=/home/labile/pub-diy/low-tec/trace/trace-istio/bpftrace

cat $SCRIPT_HOME/trace-filter-match.bt | sed "s/4267/$PID/g" > $SCRIPT_HOME/trace-filter-match.bt.gen; \
bpftrace $SCRIPT_HOME/trace-filter-match.bt.gen
 */

struct string_view {
/*    0      |     8 */    char* ptr_;
/*    8      |     8 */    unsigned long length_;
};



BEGIN
{
}


uprobe:/proc/4267/root/usr/local/bin/envoy:_ZN5Envoy10StreamInfo14StreamInfoImpl18setFilterChainNameEN4absl11string_viewE 
/pid == 4267/ 
{ 
    // $receiver = reg("di"); // "this" pointer
    // $element_ptr = (struct mailbox_element_ptr*) reg("si");
    // $file = (struct string_view *)arg1;
    $file = (struct string_view *)reg("si");
    $filterName = str($file->ptr_);
    $filterNameLength = $file->length_;

    printf("tid:%d: Got setFilterChainName=%s, lenght=%d\n %s \n", tid, $filterName, $filterNameLength, ustack ); 
}


END
{
}

