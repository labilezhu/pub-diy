#!/usr/local/bin/bpftrace


/**
readelf -s --wide  ~/envoy.mybuild | egrep 'ActiveTcpListener.*newConnection'

function getEnvoyPID()
{
    export PODID=`crictl pods | grep forti | head -n1 | awk '{print $1;}'`
    export CONTAINERID=`crictl ps | grep $PODID | grep proxy | awk '{print $1;}'`
    export CPID=`crictl inspect $CONTAINERID 2> /dev/null | jq -r -j .info.pid`
    export PID=`pgrep --ns $CPID envoy`
    echo $PID
}

export PID=`echo "$(declare -f getEnvoyPID); getEnvoyPID" | sudo bash`

docker exec -it cndt-bcc-ub bash -c "PID=$PID bash"

export SCRIPT_HOME=/home/labile/pub-diy/low-tec/trace/trace-istio/bpftrace
cat $SCRIPT_HOME/trace-filter-match-v4.bt | sed "s/4267/$PID/g" > $SCRIPT_HOME/trace-filter-match.bt.gen; \
bpftrace $SCRIPT_HOME/trace-filter-match.bt.gen
 */


/**
Envoy::Server::ActiveTcpSocket::ActiveTcpSocket(Envoy::Server::ActiveTcpListener&, 
    std::__1::unique_ptr<Envoy::Network::ConnectionSocket, std::__1::default_delete<Envoy::Network::ConnectionSocket> >&&, bool)+0

class AcceptedSocketImpl : public ConnectionSocketImpl;

class ConnectionSocketImpl : public SocketImpl, public ConnectionSocket;

class SocketImpl : public virtual Socket;

class ConnectionSocket : public virtual Socket, public virtual ScopeTrackedObject

class SocketImpl {
private:
      const std::shared_ptr<SocketAddressSetterImpl> address_provider_;
}

class SocketAddressSetter : public SocketAddressProvider;
class SocketAddressSetterImpl : public SocketAddressSetter

 */

struct typeinfo {
  void* helper;
  char* typename;
  // void* thunks[nfuncs];
  struct typeinfo* parentTypeInfo; // aka thunks[0], this is where the vtbl* in the class points to
};


struct vtable {
  long long int parent_offset;
  struct typeinfo* typeinfo;
  // void* thunks[nfuncs];
  void* anchor; // aka thunks[0], this is where the vtbl* in the class points to
};

struct compressed_ptr_pair_elem {
    void* __value_;
};

struct share_ptr {
    struct compressed_ptr_pair_elem  __ptr_;
};

struct unique_ptr {
    void* __ptr_;
};


struct ConnectionSocketImpl {
    void* primary_vtbl;   // vtbl for caf::memory_managed and caf::mailbox_element
    char padd[104-8];
    struct StreamInfo* stream_info_;
};


BEGIN
{
}

/*
readelf -s --wide  /proc/$PID/root/usr/local/bin/envoy | egrep 'ActiveTcpListener.*onAcceptWorker'

240256: 00000000032ce320  1059 FUNC    GLOBAL DEFAULT   14 _ZN5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb
240318: 00000000032ce770    14 FUNC    GLOBAL DEFAULT   14 _ZThn120_N5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb
root@cndt-bcc-ub:/# c++filt _ZThn120_N5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb
non-virtual thunk to Envoy::Server::ActiveTcpListener::onAcceptWorker(std::__1::unique_ptr<Envoy::Network::ConnectionSocket, std::__1::default_delete<Envoy::Network::ConnectionSocket> >&&, bool, bool)
root@cndt-bcc-ub:/# c++filt _ZN5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb
Envoy::Server::ActiveTcpListener::onAcceptWorker(std::__1::unique_ptr<Envoy::Network::ConnectionSocket, std::__1::default_delete<Envoy::Network::ConnectionSocket> >&&, bool, bool)
*/
// uprobe:/proc/4267/root/usr/local/bin/envoy:_ZN5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb 
// /pid == 4267/ 
// { 
//     // $streamInfo = reg("di");//%rdi	used to pass 1st argument to functions -> this
//     $activeTcpListenerThis = arg0;//%rdi	used to pass 1st argument to functions -> this
//     printf("elapsed=%d: tid=%d,comm=%s: ActiveTcpListener::onAcceptWorker: activeTcpListenerThis->%p\n", 
//         elapsed, tid, comm, $activeTcpListenerThis);

//     $ConnectionSocketPtr = arg1;
// }
// uretprobe:/proc/4267/root/usr/local/bin/envoy:_ZN5Envoy6Server17ActiveTcpListener14onAcceptWorkerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS2_14default_deleteIS5_EEEEbb 
// /pid == 4267/ 
// { 
//     // $streamInfo = reg("di");//%rdi	used to pass 1st argument to functions -> this
//     printf("elapsed=%d: tid=%d,comm=%s: ActiveTcpListener::onAcceptWorker ret: retval=%p regDi=%p\n", 
//         elapsed, tid, comm, retval,  reg("di"));
// }

/*
readelf -s --wide  /proc/$PID/root/usr/local/bin/envoy | egrep 'ActiveTcpSocket' | grep FUNC | awk 'NF>1{print $NF}' | c++filt | nl |grep 'ActiveTcpSocket::ActiveTcpSocket'
    23  Envoy::Server::ActiveTcpSocket::ActiveTcpSocket(Envoy::Server::ActiveTcpListener&, std::__1::unique_ptr<Envoy::Network::ConnectionSocket, std::__1::default_delete<Envoy::Network::ConnectionSocket> >&&, bool)

readelf -s --wide  /proc/$PID/root/usr/local/bin/envoy | egrep 'ActiveTcpSocket' | grep FUNC | nl | egrep '^\s+23\s+'

*/

// uprobe:/proc/4267/root/usr/local/bin/envoy:*ActiveTcpSocket*
// /pid == 4267/ 
// { 
//     // $streamInfo = reg("di");//%rdi	used to pass 1st argument to functions -> this
//     $ActiveTcpSocket = arg0;//%rdi	used to pass 1st argument to functions -> this
//     printf("elapsed=%d: tid=%d,comm=%s: ActiveTcpSocket::* arg0=%p\n", 
//         elapsed, tid, comm, $ActiveTcpSocket);

//      printf("%s\n", ustack(1))

//     // printf("%s\n", ustack(4));
// }


/*
ActiveTcpSocket::ActiveTcpSocket
  ActiveTcpSocket(ActiveTcpListener& listener, Network::ConnectionSocketPtr&& socket,
                   bool hand_off_restored_destination_connections)
 using ConnectionSocketPtr = std::unique_ptr<ConnectionSocket>;

 using ConnectionSocketPtr = std::unique_ptr<ConnectionSocket>;

(gdb) p socket
$84 = (Envoy::Network::ConnectionSocketPtr &&) @0x7f5cbbf6fa90: 
{__ptr_ = {
        <std::__1::__compressed_pair_elem<Envoy::Network::ConnectionSocket*, 0, false>> = {__value_ = 0x55d15ca52038},
        ...}


*/
uprobe:/proc/4267/root/usr/local/bin/envoy:_ZN5Envoy6Server15ActiveTcpSocketC2ERNS0_17ActiveTcpListenerEONSt3__110unique_ptrINS_7Network16ConnectionSocketENS4_14default_deleteIS7_EEEEb
/pid == 4267/ 
{ 
    // $streamInfo = reg("di");//%rdi	used to pass 1st argument to functions -> this
    $ActiveTcpSocket = arg0;//%rdi	used to pass 1st argument to functions -> this
    printf("elapsed=%d: tid=%d,comm=%s: ActiveTcpSocket::ActiveTcpSocket arg0=%p\n", 
        elapsed, tid, comm, $ActiveTcpSocket);

    printf("arg0=%p, arg1=%p, arg2=%p\n", arg0,arg1,arg2);

    printf("%s\n", ustack(3));

    $p_share_ptr_socket = (struct share_ptr *)arg2;
    // printf("p_share_ptr_socket=%p\n", $p_share_ptr_socket);
    $pConnectionSocket = (struct ConnectionSocketImpl *) ($p_share_ptr_socket->__ptr_.__value_);
    printf("pConnectionSocket=%p\n", $pConnectionSocket);

    $pAnchor = *(uint64*)$pConnectionSocket;

    $ppTypeInfoConnectionSocket = (struct typeinfo**) (((uint64)$pAnchor) - 8);

    $topOffConnectionSocket = (struct vtable*) (((uint64)$pAnchor) - 16);
    printf("topOffConnectionSocket=%d\n", $topOffConnectionSocket->parent_offset);

    // printf("ppTypeInfoConnectionSocket=%p\n", $ppTypeInfoConnectionSocket);

    // printf("usym(ppTypeInfoConnectionSocket)=%s\n", usym($ppTypeInfoConnectionSocket));

    $pTypeInfoConnectionSocket = *$ppTypeInfoConnectionSocket;

    // printf("pTypeInfoConnectionSocket=%p\n", $pTypeInfoConnectionSocket);

    printf("pTypeInfoConnectionSocket->typename=%s\n", str($pTypeInfoConnectionSocket->typename));
    //stdout: pTypeInfoConnectionSocket->typename=N5Envoy7Network18AcceptedSocketImplE


}




END
{
    // clear(@newConnection_this);
}


